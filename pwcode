#!/usr/bin/env python3

# Copyright (C) 2020 Morten Eek

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os, sys, psutil, xmlrpc.client, socket
sys.path.append('bin')
from bin.app import App


def is_running(script): # WAIT: Bare sjekke om fÃ¥r kontakt med serverproxy heller?
    for p in psutil.process_iter():
        if p.name().startswith('python'):
            if len(p.cmdline())>1 and script in p.cmdline()[1] and p.pid !=os.getpid():
                return str(p.pid)


def find_free_port():
    s = socket.socket()
    s.bind(('', 0))  
    return s.getsockname()[1]   


def open_files_from_arg(args, app):
    if len(args) > 1:
        for file in sys.argv[1:]:
            if os.path.isfile(file):
                app.run_command('open_file', file)


def open_files_from_tmp(app):
    for r, d, f in os.walk(app.model.tmp_dir):
        for file in f:
            if 'Untitled-' in file:
                app.run_command('open_file', app.model.tmp_dir + '/' + file)    


def start_client():
    port=open('bin/tmp/port', 'r').read()
    app = xmlrpc.client.ServerProxy('http://localhost:' + port)
    open_files_from_arg(sys.argv, app)
    app.focus()


def start_server():  
    app = App()
    app.build_ui()
    open_files_from_tmp(app)
    app.run_command('show_welcome')
    open_files_from_arg(sys.argv, app)                  
    port = find_free_port()
    with open(app.model.tmp_dir + '/port', 'w') as file:
        file.write(str(port))      
    app.run(port)


if __name__ == "__main__":
    server = is_running(os.path.basename(__file__))
    if server:
        start_client()
    else:
        start_server()            
 


